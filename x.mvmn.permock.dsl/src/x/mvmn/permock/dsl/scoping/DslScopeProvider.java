/*
 * generated by Xtext 2.25.0
 */
package x.mvmn.permock.dsl.scoping;

import java.util.Arrays;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

import x.mvmn.permock.dsl.dsl.ListFunction;

/**
 * This class contains custom scoping description.
 * 
 * See
 * https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class DslScopeProvider extends AbstractDslScopeProvider {

	@Override
	public IScope getScope(EObject context, EReference reference) {
		if (context instanceof ListFunction) {
			ListFunction listFunct = (ListFunction) context;
			if (listFunct.getAlias() != null) {
				if (listFunct.eContainer() != null) {
//					ListFunction parentListFunction = EcoreUtil2.getContainerOfType(listFunct.eContainer(),
//							ListFunction.class);
					// TODO: get scope;
				}
				return Scopes.scopeFor(Arrays.asList(listFunct.getAlias()));
			} else {
				return super.getScope(context, reference);
			}
		} else {
			return super.getScope(context, reference);
		}
	}
}
