/**
 * generated by Xtext 2.25.0
 */
package x.mvmn.permock.dsl.dsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import x.mvmn.permock.dsl.dsl.DslPackage;
import x.mvmn.permock.dsl.dsl.Header;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Header</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link x.mvmn.permock.dsl.dsl.impl.HeaderImpl#getHeaderName <em>Header Name</em>}</li>
 *   <li>{@link x.mvmn.permock.dsl.dsl.impl.HeaderImpl#getHeaderValue <em>Header Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HeaderImpl extends MinimalEObjectImpl.Container implements Header
{
  /**
   * The default value of the '{@link #getHeaderName() <em>Header Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeaderName()
   * @generated
   * @ordered
   */
  protected static final String HEADER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHeaderName() <em>Header Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeaderName()
   * @generated
   * @ordered
   */
  protected String headerName = HEADER_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getHeaderValue() <em>Header Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeaderValue()
   * @generated
   * @ordered
   */
  protected static final String HEADER_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHeaderValue() <em>Header Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeaderValue()
   * @generated
   * @ordered
   */
  protected String headerValue = HEADER_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HeaderImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.HEADER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHeaderName()
  {
    return headerName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHeaderName(String newHeaderName)
  {
    String oldHeaderName = headerName;
    headerName = newHeaderName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HEADER__HEADER_NAME, oldHeaderName, headerName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHeaderValue()
  {
    return headerValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHeaderValue(String newHeaderValue)
  {
    String oldHeaderValue = headerValue;
    headerValue = newHeaderValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HEADER__HEADER_VALUE, oldHeaderValue, headerValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.HEADER__HEADER_NAME:
        return getHeaderName();
      case DslPackage.HEADER__HEADER_VALUE:
        return getHeaderValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.HEADER__HEADER_NAME:
        setHeaderName((String)newValue);
        return;
      case DslPackage.HEADER__HEADER_VALUE:
        setHeaderValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.HEADER__HEADER_NAME:
        setHeaderName(HEADER_NAME_EDEFAULT);
        return;
      case DslPackage.HEADER__HEADER_VALUE:
        setHeaderValue(HEADER_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.HEADER__HEADER_NAME:
        return HEADER_NAME_EDEFAULT == null ? headerName != null : !HEADER_NAME_EDEFAULT.equals(headerName);
      case DslPackage.HEADER__HEADER_VALUE:
        return HEADER_VALUE_EDEFAULT == null ? headerValue != null : !HEADER_VALUE_EDEFAULT.equals(headerValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (headerName: ");
    result.append(headerName);
    result.append(", headerValue: ");
    result.append(headerValue);
    result.append(')');
    return result.toString();
  }

} //HeaderImpl
